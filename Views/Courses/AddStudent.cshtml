@using System.Security.Claims
@model IEnumerable<VDiary.Models.User>

@{
    ViewData["Title"] = "Edit";
    ViewData["filter"] = "";
}
<form asp-action="AddStudent" method="get" asp-route-id="@ViewData["SubjectId"]" asp-route-courseId="@ViewData["CourseId"]">
    
    <p>
        Find by name: <input type="text" name="filter" value="@ViewData["filter"]" />
        <input type="submit" value="Search" class="btn btn-primary" /> |
        <a asp-action="AddStudent" asp-route-d="@ViewData["CourseId"]">Back to Full List</a>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    <form asp-controller="Courses" asp-action="AddStudent" asp-route-userId="@item.Id" asp-route-subjectId="@ViewData["SubjectId"]" asp-route-courseId="@ViewData["CourseId"]">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <input type="submit" value="Add User" class="btn btn-primary" />
                        </div>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <a asp-action="ShowMembers" asp-route-subjectId="@ViewData["SubjectId"]" asp-route-courseId="@ViewData["CourseId"]" asp-route-lecturerId="@ViewData["lecturerId"]">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
